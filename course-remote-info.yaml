hyperskill_project:
  id: 66
  ide_files: https://cogniterra.org/media/attachments/lesson/23049/additional_files.json
  is_template_based: false
  use_ide: true
update_date: "Thu, 01 Jan 1970 00:00:00 UTC"
stages:
  - id: 354
    step: 5496
    is_completed: true
  - id: 355
    step: 5497
    is_completed: true
  - id: 356
    step: 5498
    is_completed: true
  - id: 357
    step: 5499
    is_completed: true
  - id: 358
    step: 5500
    is_completed: false
  - id: 359
    step: 5501
    is_completed: false
topics:
  0:
    - title: Computer algorithms
      theory_id: 16547
    - title: "Big O: how to count it"
      theory_id: 35901
    - title: Introduction to Java
      theory_id: 38627
    - title: "Basic literals: numbers, strings and characters"
      theory_id: 3522
    - title: Writing first program
      theory_id: 3521
    - title: Printing data
      theory_id: 3749
    - title: Types and variables
      theory_id: 3518
    - title: Comments
      theory_id: 3520
    - title: Reading user's input with Scanner
      theory_id: 9055
    - title: Coding style conventions
      theory_id: 12411
    - title: Naming variables
      theory_id: 3513
    - title: Arithmetic operations
      theory_id: 3519
    - title: Integer types and operations
      theory_id: 3565
    - title: Boolean type and operations. True and false
      theory_id: 3516
    - title: Comparing values. Relational operators
      theory_id: 3512
    - title: Conditional statement
      theory_id: 3503
    - title: Increment and decrement
      theory_id: 5008
    - title: Characters
      theory_id: 3514
    - title: String
      theory_id: 3523
    - title: IntelliJ IDEA
      theory_id: 37202
    - title: IntelliJ IDEA basics
      theory_id: 5819
    - title: JetBrains Academy plugin
      theory_id: 5839
  1:
    - title: Complexity cases and how to use them
      theory_id: 20084
    - title: Abstract and concrete data structures
      theory_id: 16927
    - title: "Write, compile, and run"
      theory_id: 3739
    - title: "Basic terms: JVM, JRE, JDK"
      theory_id: 3499
    - title: Command line overview
      theory_id: 8977
    - title: Parameters and options
      theory_id: 9746
    - title: Running programs on your computer
      theory_id: 3746
    - title: Pseudocode
      theory_id: 15090
    - title: Pseudocode basics
      theory_id: 19510
    - title: Fixed-size array
      theory_id: 20078
    - title: Dynamic array
      theory_id: 5357
    - title: Complex constructions in pseudocode
      theory_id: 20922
    - title: One-line condition with ternary operator
      theory_id: 3506
    - title: While and do-while loops
      theory_id: 3498
    - title: For-loop
      theory_id: 3505
    - title: Break and continue. Branching
      theory_id: 3507
    - title: "Multiple conditions: switch"
      theory_id: 3504
    - title: Data types and their sizes
      theory_id: 3532
    - title: Type casting
      theory_id: 3510
    - title: Calling methods
      theory_id: 10973
    - title: Declaring methods
      theory_id: 10982
    - title: Method "main"
      theory_id: 3489
    - title: Functional decomposition
      theory_id: 10570
    - title: Primitive and reference types
      theory_id: 5035
    - title: Array
      theory_id: 3511
    - title: Arrays as parameters
      theory_id: 3594
    - title: Errors in programs
      theory_id: 3536
    - title: First glance at exceptions
      theory_id: 3497
    - title: What is object-oriented programming
      theory_id: 3614
    - title: Command-line arguments
      theory_id: 3566
    - title: IntelliJ IDEA run configurations
      theory_id: 10630
    - title: Searching problem
      theory_id: 15894
    - title: Linear search
      theory_id: 4970
    - title: Defining classes
      theory_id: 3618
  2:
    - title: Overloading
      theory_id: 3525
    - title: Hierarchy of exceptions
      theory_id: 3570
    - title: Exception handling
      theory_id: 3552
    - title: File class
      theory_id: 3635
    - title: Reading files
      theory_id: 3636
    - title: What are bugs
      theory_id: 5504
    - title: Introduction to logging
      theory_id: 5538
    - title: Debugging techniques
      theory_id: 13775
    - title: Grouping classes with packages
      theory_id: 3621
    - title: Instance methods
      theory_id: 3495
    - title: Initializing new instances. Constructor
      theory_id: 3535
    - title: Access modifiers
      theory_id: 3589
    - title: Getters and setters
      theory_id: 3599
    - title: Inheritance
      theory_id: 3583
    - title: Multiple constructors
      theory_id: 3538
    - title: Keyword "super"
      theory_id: 3588
    - title: Objects and their properties
      theory_id: 4727
  3:
    - title: Immutability
      theory_id: 7929
    - title: Constants. Final variables
      theory_id: 7427
    - title: NullPointerException
      theory_id: 1945
    - title: Introduction to generic programming
      theory_id: 3492
    - title: Protected modifier
      theory_id: 6692
    - title: Referencing subclass objects
      theory_id: 3585
    - title: Static members
      theory_id: 3534
    - title: Adding annotations
      theory_id: 3622
    - title: Method overriding
      theory_id: 3572
    - title: Polymorphism
      theory_id: 3587
    - title: Wrapping classes. Boxing
      theory_id: 3595
  4:
    - title: Modulo division
      theory_id: 10586
    - title: Iterating over arrays
      theory_id: 3602
    - title: "Hashing: overview"
      theory_id: 9831
    - title: Hash function
      theory_id: 30143
    - title: Hash table
      theory_id: 13054
    - title: Generics and Object
      theory_id: 3493
    - title: What are collections
      theory_id: 3770
    - title: The Collections framework overview
      theory_id: 3624
    - title: ArrayList
      theory_id: 3567
    - title: The List interface
      theory_id: 3581
    - title: The Set interface
      theory_id: 3575
    - title: The Map interface
      theory_id: 3558
    - title: HashMap
      theory_id: 12379
    - title: Object class
      theory_id: 3596
    - title: Declaring functionality with interfaces
      theory_id: 3615
  5:
    - title: Concept of design patterns
      theory_id: 3611
    - title: Strategy
      theory_id: 3556
    - title: Template method
      theory_id: 5155
    - title: Abstract class
      theory_id: 3597
